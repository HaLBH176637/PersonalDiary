@model List<PersonalDiaryClient.Models.Post>
@{
    Layout = null;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Public Posts - PersonalDiaryClient</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/custom.css" asp-append-version="true" />
</head>
<body>
    <div class="container-fluid d-flex justify-content-between">
        <form asp-action="Index" asp-controller="Home">
            <button class="btn-warning" style="background: yellow;">Home</button>
        </form>
        <form asp-action="SearchByTag" asp-controller="Diary" method="get" class="d-flex">
            <input type="text" name="tag" class="form-control" placeholder="Search by Tag" required />
            <button type="submit" class="btn btn-primary ml-2">Search</button>
        </form>
    </div>

    <div class="container">
        <h2 class="text-center text-white mb-4">Public Posts</h2>
        <form asp-action="FilterPostsPublic" asp-controller="Diary" method="get" class="d-flex">
            <select name="sortOrder" class="form-control mr-2">
                <option value="">Sort by Date</option>
                <option value="newest">Newest First</option>
                <option value="oldest">Oldest First</option>
                <option value="mostLikes">Most Likes</option>
                <option value="leastLikes">Least Likes</option>
            </select>
            <button type="submit" class="btn btn-primary">Filter</button>
        </form>

        <div class="row">
            @if (ViewBag.Posts != null)
            {
                @foreach (var post in ViewBag.Posts)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title text-primary">@post.Tag</h5>
                                <p class="card-text">
                                    @(post.Content.Length > 100 ? post.Content.Substring(0, 100) + "..." : post.Content)
                                </p>
                                <p class="text-muted">Posted on: @post.CreatedAt?.ToString("yyyy-MM-dd")</p>
                                <p class="text-secondary"><strong>Privacy:</strong> @post.Privacy</p>
                                <p class="text-secondary">Likes: @(ViewBag.PostLikes.ContainsKey(post.Id) ? ViewBag.PostLikes[post.Id] : 0)</p>

                                <p class="text-muted text-center">
                                    Author: @(post.User.Fullname)
                                </p>



                                    <!-- Thêm phần hiển thị tóm tắt -->
                                <div id="summary-@post.Id" class="text-muted mt-2">Summarize: </div>

                            </div>
                            <div class="card-footer bg-transparent d-flex justify-content-between">
                                <!-- Nút Read Details -->
                                <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-outline-primary">Read Details</a>
                                <button class="btn btn-outline-info" onclick="summarizePost(@post.Id)">Summarize Post</button>

                                <script>
                                    function summarizePost(postId) {
                                        // Send a request to summarize the post using Ajax
                                        $.ajax({
                                            url: '@Url.Action("SummarizePost", "Home")', // The action that handles the summarization
                                            type: 'POST',
                                            data: {
                                                postId: postId
                                            },
                                            success: function (response) {
                                                // Update the summary in the card
                                                $('#summary-' + postId).text('Summary: ' + response.summary);
                                            },
                                            error: function (error) {
                                                alert('There was an error summarizing the post.');
                                            }
                                        });
                                    }
                                </script>
                                @{
                                    var likedPosts = ViewBag.LikedPosts as List<int> ?? new List<int>();
                                }

                                @if (likedPosts.Contains(post.Id))
                                {
                                    <form asp-action="ToggleLike" asp-controller="Diary" method="post">
                                        <input type="hidden" name="postId" value="@post.Id" />
                                        <button type="submit" class="btn btn-outline-danger">Dislike</button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-action="ToggleLike" asp-controller="Diary" method="post">
                                        <input type="hidden" name="postId" value="@post.Id" />
                                        <button type="submit" class="btn btn-outline-success">Like</button>
                                    </form>
                                }

                                @if (post.UserId == ViewBag.UserId)
                                {
                                    <a asp-action="EditPost" asp-route-id="@post.Id" class="btn btn-outline-primary">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@post.Id" class="btn btn-outline-danger delete-btn" onclick="return confirmDelete()">Delete</a>
                                }
                            </div>


                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12">
                    <p class="text-center text-white">No posts available.</p>
                </div>
            }
        </div>

        @if (ViewBag.TotalPages > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-action="Public" asp-route-page="@i">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function confirmDelete() {
            return confirm("Bạn có chắc chắn muốn xóa không?");
        }
        $(document).on('submit', '.like-form', function (event) {
            event.preventDefault();
            var form = $(this);
            $.ajax({
                url: form.attr('action'),
                type: form.attr('method'),
                data: form.serialize(),
                success: function (response) {
                    var postId = form.find('input[name="postId"]').val();
                    var likeButton = form.find('button');
                    if (likeButton.hasClass('btn-outline-success')) {
                        likeButton.removeClass('btn-outline-success').addClass('btn-outline-danger').text('Dislike');
                    } else {
                        likeButton.removeClass('btn-outline-danger').addClass('btn-outline-success').text('Like');
                    }
                }
            });
        });
        function summarizePost(postId) {
            // Send a request to summarize the post using Ajax
            $.ajax({
                url: '@Url.Action("SummarizePost", "Home")', // The action that handles the summarization
                type: 'POST',
                data: {
                    postId: postId
                },
                success: function (response) {
                    // Update the summary in the card
                    $('#summary-' + postId).text('Summary: ' + response.summary);
                },
                error: function (error) {
                    alert('There was an error summarizing the post.');
                }
            });
        }
    </script>
</body>
</html>
